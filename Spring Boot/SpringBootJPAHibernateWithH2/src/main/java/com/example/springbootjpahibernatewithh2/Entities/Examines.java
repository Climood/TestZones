package com.example.springbootjpahibernatewithh2.Entities;

import org.springframework.scheduling.config.Task;

import javax.persistence.*;
import java.util.List;

/*
Lets look at a few more examples to understand how JPA can be used to map objects to tables.
Example 1 - Relationships @ManyToMany

Relationships between objects are expressed in a different way compared to relationship between tables.

Each Employee can have multiple Tasks. Each Task can be shared by multiple Employees.
There is a Many to Many relationship between them. We use @ManyToMany annotation to establish the relationship.
 */
@Entity
public class Examines {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private long id;
    private String name;
    private String date;

    @ManyToMany
    private List<Student> students;

    protected Examines(){
        super();
    }

    public Examines(Long id,String name,String date){ //нужен если будем вставлять записи через саму h2 console
        super();
        this.id = id;
        this.name = name;
        this.date = date;
    }

    public Examines(String name,String date){  //исп если вставляем через репозиторий (ид будет генериться сам)
        super();
        this.name = name;
        this.date = date;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDate() {
        return date;
    }

    public void setDate(String date) {
        this.date = date;
    }
}

/*
public class Employee {

     //Some other code

	@ManyToMany
	private List<Task> tasks;
}

public class Task {

     //Some other code

	@ManyToMany(mappedBy = "tasks")
	private List<Employee> employees;
}

CREATE TABLE employee
  (
     id            BIGINT NOT NULL,
     OTHER_COLUMNS
  )


  CREATE TABLE employee_tasks
  (
     employees_id BIGINT NOT NULL,
     tasks_id     INTEGER NOT NULL
  )

  CREATE TABLE task
  (
     id          INTEGER GENERATED BY DEFAULT AS IDENTITY,
     OTHER_COLUMNS
  )


 */